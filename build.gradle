buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:3.9.8')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

group 'org.co'
version '1.0-SNAPSHOT'

defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_17

ext {
    serenityVersion = '4.1.20'
    restAssuredVersion = '5.5.0'
}


dependencies {
    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-rest-assured:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-reports:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    testImplementation "net.serenity-bdd:serenity-rest-assured:$rootProject.ext.serenityVersion"
    testImplementation "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"
    testImplementation "io.rest-assured:rest-assured:$rootProject.ext.serenityVersion"
    testImplementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityVersion"
    testImplementation 'junit:junit:4.13.1'
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    maxParallelForks = 1
}

serenity {
    testRoot="petStoreApi"
    requirementsDir = "src/test/resources/features"
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)
